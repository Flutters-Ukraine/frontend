{"version":3,"file":"component---src-pages-using-ssr-js-f2271dd8b338d9a05ac1.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header/header-styles.js","webpack://gatsby-starter-default/./src/components/header/index.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import { Link } from 'gatsby'\r\nimport styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #fff;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding: 20px 110px;\r\n    z-index: 2;\r\n    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n`\r\n\r\nexport const HeaderLogo = styled(Link)`\r\n    color: black;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const HeaderNavMenu = styled.nav`\r\n    font-size: 18px;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        position: absolute;\r\n        top: 0;\r\n        margin-top: 50px;\r\n        left: 0;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport const HamburgerLines = styled.div`\r\n    display: none;\r\n    height: 26px;\r\n    width: 32px;\r\n    position: absolute;\r\n    top: 17px;\r\n    right: 20px;\r\n    z-index: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        display: block;\r\n    }\r\n\r\n    & .line1 {\r\n        transform-origin: 0% 0%;\r\n        transition: transform 0.4s ease-in-out;\r\n    }\r\n\r\n    & .line2 {\r\n        transition: transform 0.2s ease-in-out;\r\n    }\r\n\r\n    & .line3 {\r\n        transform-origin: 0% 0%;\r\n        transition: transform 0.4s ease-in-out;\r\n    }\r\n`\r\n\r\nexport const HeaderNavList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 960px) {\r\n       /* margin-top: 50px; */\r\n       flex-direction: column;\r\n       width: 100%;\r\n       justify-content: center;\r\n       align-items: center;\r\n    }\r\n`\r\n\r\nexport const MenuToggle = styled.input.attrs({ type: 'checkbox' })`\r\n    position: absolute;\r\n    display: block;\r\n    height: 32px;\r\n    width: 32px;\r\n    top: 20px;\r\n    right: 20px;\r\n    z-index: 5;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n\r\n    &:checked ~ ${HeaderNavList}{ \r\n        transform: translateX(0);\r\n    }\r\n\r\n    &:checked ~ ${HamburgerLines} .line1{ \r\n        transform: rotate(45deg);\r\n    }\r\n\r\n    &:checked ~ ${HamburgerLines} .line2{ \r\n        transform: scaleY(0);\r\n    }\r\n    \r\n    &:checked ~ ${HamburgerLines} .line3{ \r\n        transform: rotate(-45deg);\r\n    }\r\n\r\n    transform: rotate(-45deg);\r\n    &:checked ~ ${HamburgerLines} .line3{ \r\n    }\r\n`\r\n\r\nexport const HamburgerLine = styled.span`\r\n    display: block;\r\n    height: 4px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: black;\r\n`\r\n\r\nexport const NavItem = styled.li`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-left: 25px;\r\n    /* height: 80px; */\r\n\r\n    @media screen and (max-width: 960px) {\r\n        transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);\r\n    }\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n    color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\nexport const LanguageSpan = styled.span`\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    outline-style: none; \r\n    -webkit-touch-callout: none;\r\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\r\n\r\n    &.active {\r\n        color: #02319B;\r\n        font-size: 26px;\r\n    }\r\n  \r\n`","import React, { useState } from 'react'\r\nimport { HeaderWrapper, HeaderLogo, HeaderNavMenu, NavItem, NavLink, HeaderNavList, LanguageSpan, MenuToggle, HamburgerLines, HamburgerLine, } from './header-styles'\r\n\r\nconst Header = () => {\r\n\r\n    const languages = ['en', 'ua']\r\n\r\n    const [language, setLanguage] = useState(languages[0]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <HeaderLogo to=\"/\">\r\n                    LOGO\r\n                </HeaderLogo>\r\n                <MenuToggle />\r\n                <HamburgerLines>\r\n                    <HamburgerLine className=\"line1\"></HamburgerLine>\r\n                    <HamburgerLine className=\"line2\"></HamburgerLine>\r\n                    <HamburgerLine className=\"line3\"></HamburgerLine>\r\n                </HamburgerLines>\r\n                <HeaderNavMenu>\r\n                    <HeaderNavList>\r\n                        <NavItem >\r\n                            <NavLink to=\"/about\">About Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/about-flutter\">About Flutter</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/services\">Services</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/our-work\">Our Work</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/our-work\">Contact Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <LanguageSpan className={`${language === languages[0] ? 'active' : ''} `} onClick={() => setLanguage(languages[0])}>en&nbsp;</LanguageSpan>/&nbsp;<LanguageSpan className={`${language === languages[1] ? 'active' : ''}`} onClick={() => setLanguage(languages[1])}>ua</LanguageSpan>\r\n                        </NavItem>\r\n                    </HeaderNavList>\r\n                </HeaderNavMenu>\r\n            </HeaderWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// import { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\nimport Header from './header'\r\n\r\nconst Layout = ({ children }) => {\r\n  // const data = useStaticQuery(graphql`\r\n  //   query SiteTitleQuery {\r\n  //     site {\r\n  //       siteMetadata {\r\n  //         title\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"layout-wrapper\">\r\n        <main>{children}</main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst UsingSSR = ({ serverData }) => {\r\n  return (\r\n    <Layout>\r\n      <h1>\r\n        This page is <b>rendered server-side</b>\r\n      </h1>\r\n      <p>\r\n        This page is rendered server side every time the page is requested.\r\n        Reload it to see a(nother) random photo from{\" \"}\r\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\r\n      </p>\r\n      <img\r\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\r\n        alt=\"A random dog\"\r\n        src={serverData.message}\r\n      />\r\n      <p>\r\n        To learn more, head over to our{\" \"}\r\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\r\n          documentation about Server Side Rendering\r\n        </a>\r\n        .\r\n      </p>\r\n      <Link to=\"/\">Go back to the homepage</Link>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => <Seo title=\"Using SSR\" />\r\n\r\nexport default UsingSSR\r\n\r\nexport async function getServerData() {\r\n  try {\r\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\r\n    if (!res.ok) {\r\n      throw new Error(`Response failed`)\r\n    }\r\n    return {\r\n      props: await res.json(),\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      status: 500,\r\n      headers: {},\r\n      props: {},\r\n    }\r\n  }\r\n}\r\n"],"names":["HeaderWrapper","styled","HeaderLogo","Link","HeaderNavMenu","HamburgerLines","HeaderNavList","MenuToggle","type","HamburgerLine","NavItem","NavLink","LanguageSpan","languages","useState","language","setLanguage","to","className","onClick","children","Seo","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps","Head","serverData","style","width","borderRadius","alt","src","message","href"],"sourceRoot":""}