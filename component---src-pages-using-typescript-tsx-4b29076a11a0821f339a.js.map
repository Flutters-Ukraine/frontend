{"version":3,"file":"component---src-pages-using-typescript-tsx-4b29076a11a0821f339a.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header/header-styles.js","webpack://gatsby-starter-default/./src/components/header/index.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport * as React from \"react\"\r\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\r\n  data,\r\n  location,\r\n}) => (\r\n  <Layout>\r\n    <h1>\r\n      Gatsby supports <b>TypeScript by default</b>\r\n    </h1>\r\n    <p>\r\n      This means that you can create and write <code>.ts/.tsx</code> files for\r\n      your pages, components, and <code>gatsby-*</code> configuration files (for\r\n      example <code>gatsby-config.ts</code>).\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <code>typescript</code> via npm\r\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page <code>{location.pathname}</code> which was\r\n      built on {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" children={undefined} />\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import { Link } from 'gatsby'\r\nimport styled from 'styled-components';\r\n\r\nexport const HeaderWrapper = styled.header`\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #fff;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding: 20px 110px;\r\n    z-index: 2;\r\n    box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n`\r\n\r\nexport const HeaderLogo = styled(Link)`\r\n    color: black;\r\n    justify-self: flex-start;\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const HeaderNavMenu = styled.nav`\r\n    font-size: 18px;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        position: absolute;\r\n        top: 0;\r\n        margin-top: 50px;\r\n        left: 0;\r\n        flex-direction: column;\r\n        width: 100%;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport const HamburgerLines = styled.div`\r\n    display: none;\r\n    height: 26px;\r\n    width: 32px;\r\n    position: absolute;\r\n    top: 17px;\r\n    right: 20px;\r\n    z-index: 2;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n\r\n    @media screen and (max-width: 960px) {\r\n        display: block;\r\n    }\r\n\r\n    & .line1 {\r\n        transform-origin: 0% 0%;\r\n        transition: transform 0.4s ease-in-out;\r\n    }\r\n\r\n    & .line2 {\r\n        transition: transform 0.2s ease-in-out;\r\n    }\r\n\r\n    & .line3 {\r\n        transform-origin: 0% 0%;\r\n        transition: transform 0.4s ease-in-out;\r\n    }\r\n`\r\n\r\nexport const HeaderNavList = styled.ul`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    list-style: none;\r\n    text-align: center;\r\n\r\n    @media screen and (max-width: 960px) {\r\n       /* margin-top: 50px; */\r\n       flex-direction: column;\r\n       width: 100%;\r\n       justify-content: center;\r\n       align-items: center;\r\n    }\r\n`\r\n\r\nexport const MenuToggle = styled.input.attrs({ type: 'checkbox' })`\r\n    position: absolute;\r\n    display: block;\r\n    height: 32px;\r\n    width: 32px;\r\n    top: 20px;\r\n    right: 20px;\r\n    z-index: 5;\r\n    opacity: 0;\r\n    cursor: pointer;\r\n\r\n    &:checked ~ ${HeaderNavList}{ \r\n        transform: translateX(0);\r\n    }\r\n\r\n    &:checked ~ ${HamburgerLines} .line1{ \r\n        transform: rotate(45deg);\r\n    }\r\n\r\n    &:checked ~ ${HamburgerLines} .line2{ \r\n        transform: scaleY(0);\r\n    }\r\n    \r\n    &:checked ~ ${HamburgerLines} .line3{ \r\n        transform: rotate(-45deg);\r\n    }\r\n\r\n    transform: rotate(-45deg);\r\n    &:checked ~ ${HamburgerLines} .line3{ \r\n    }\r\n`\r\n\r\nexport const HamburgerLine = styled.span`\r\n    display: block;\r\n    height: 4px;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    background: black;\r\n`\r\n\r\nexport const NavItem = styled.li`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding-left: 25px;\r\n    /* height: 80px; */\r\n\r\n    @media screen and (max-width: 960px) {\r\n        transition: height 400ms cubic-bezier(0.23, 1, 0.32, 1);\r\n    }\r\n`\r\n\r\nexport const NavLink = styled(Link)`\r\n    color: black;\r\n    display: flex;\r\n    align-items: center;\r\n    text-decoration: none;\r\n`\r\n\r\n\r\nexport const LanguageSpan = styled.span`\r\n    cursor: pointer;\r\n    text-decoration: none;\r\n    outline-style: none; \r\n    -webkit-touch-callout: none;\r\n    -webkit-tap-highlight-color: rgba(0,0,0,0);\r\n\r\n    &.active {\r\n        color: #02319B;\r\n        font-size: 26px;\r\n    }\r\n  \r\n`","import React, { useState } from 'react'\r\nimport { HeaderWrapper, HeaderLogo, HeaderNavMenu, NavItem, NavLink, HeaderNavList, LanguageSpan, MenuToggle, HamburgerLines, HamburgerLine, } from './header-styles'\r\n\r\nconst Header = () => {\r\n\r\n    const languages = ['en', 'ua']\r\n\r\n    const [language, setLanguage] = useState(languages[0]);\r\n\r\n    return (\r\n        <>\r\n            <HeaderWrapper>\r\n                <HeaderLogo to=\"/\">\r\n                    LOGO\r\n                </HeaderLogo>\r\n                <MenuToggle />\r\n                <HamburgerLines>\r\n                    <HamburgerLine className=\"line1\"></HamburgerLine>\r\n                    <HamburgerLine className=\"line2\"></HamburgerLine>\r\n                    <HamburgerLine className=\"line3\"></HamburgerLine>\r\n                </HamburgerLines>\r\n                <HeaderNavMenu>\r\n                    <HeaderNavList>\r\n                        <NavItem >\r\n                            <NavLink to=\"/about\">About Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/about-flutter\">About Flutter</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/services\">Services</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/our-work\">Our Work</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <NavLink to=\"/our-work\">Contact Us</NavLink>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            <LanguageSpan className={`${language === languages[0] ? 'active' : ''} `} onClick={() => setLanguage(languages[0])}>en&nbsp;</LanguageSpan>/&nbsp;<LanguageSpan className={`${language === languages[1] ? 'active' : ''}`} onClick={() => setLanguage(languages[1])}>ua</LanguageSpan>\r\n                        </NavItem>\r\n                    </HeaderNavList>\r\n                </HeaderNavMenu>\r\n            </HeaderWrapper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n// import { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport \"./layout.css\"\r\nimport Header from './header'\r\n\r\nconst Layout = ({ children }) => {\r\n  // const data = useStaticQuery(graphql`\r\n  //   query SiteTitleQuery {\r\n  //     site {\r\n  //       siteMetadata {\r\n  //         title\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // `)\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"layout-wrapper\">\r\n        <main>{children}</main>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction Seo({ description, title, children }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nSeo.defaultProps = {\r\n  description: ``,\r\n}\r\n\r\nSeo.propTypes = {\r\n  description: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Seo\r\n"],"names":["Head","React","Seo","title","children","undefined","data","location","Layout","pathname","site","buildTime","href","Link","to","HeaderWrapper","styled","HeaderLogo","HeaderNavMenu","HamburgerLines","HeaderNavList","MenuToggle","type","HamburgerLine","NavItem","NavLink","LanguageSpan","languages","useState","language","setLanguage","className","onClick","description","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","defaultProps"],"sourceRoot":""}